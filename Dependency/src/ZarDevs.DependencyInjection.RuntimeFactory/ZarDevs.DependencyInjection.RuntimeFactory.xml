<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZarDevs.DependencyInjection.Runtime</name>
    </assembly>
    <members>
        <member name="T:ZarDevs.DependencyInjection.IocKernelBuilder">
            <summary>
            Ioc Kernel Builder that will create instances of the underlying IOC technology
            </summary>
        </member>
        <member name="M:ZarDevs.DependencyInjection.IocKernelBuilder.#ctor">
            <summary>
            Create a new instance of the IOC kernel builder.
            </summary>
        </member>
        <member name="M:ZarDevs.DependencyInjection.IocKernelBuilder.CreateDependencyBuilder">
            <summary>
            Create the Ioc Container, <see cref="T:ZarDevs.DependencyInjection.IIocContainer" /> that will be used by this IOC
            implementation to resolve the request using the underlying IOC methodology.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZarDevs.DependencyInjection.IocKernelBuilder.CreateIocContainer">
            <summary>
            Create the dependency container that will be used to bind the dependencies and the
            transform it to the underlying IOC methodology.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZarDevs.DependencyInjection.IIocContainerExtensions">
            <summary>
            <see cref="T:ZarDevs.DependencyInjection.IIocContainer" /> extensions
            </summary>
        </member>
        <member name="M:ZarDevs.DependencyInjection.IIocContainerExtensions.Resolver(ZarDevs.DependencyInjection.IIocContainer)">
            <summary>
            Cast the current container to <see cref="T:ZarDevs.DependencyInjection.IDependencyResolver" />.
            </summary>
            <param name="container">The container to cast</param>
            <returns></returns>
        </member>
    </members>
</doc>