<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZarDevs.Http.Security.Jwt</name>
    </assembly>
    <members>
        <member name="T:ZarDevs.Http.Security.IAccessTokenUsernameRequestBuilder">
            <summary>
            Access token request builder for username and password requests.
            </summary>
        </member>
        <member name="P:ZarDevs.Http.Security.IAccessTokenUsernameRequestBuilder.Password">
            <summary>
            Get the password.
            </summary>
        </member>
        <member name="P:ZarDevs.Http.Security.IAccessTokenUsernameRequestBuilder.Scope">
            <summary>
            Get the list of scopes
            </summary>
        </member>
        <member name="P:ZarDevs.Http.Security.IAccessTokenUsernameRequestBuilder.Username">
            <summary>
            Get the username
            </summary>
        </member>
        <member name="M:ZarDevs.Http.Security.IAccessTokenUsernameRequestBuilder.AddScopes(System.String[])">
            <summary>
            Add scopes to the request
            </summary>
            <param name="scopes">A list of scopes to add.</param>
            <returns>The current instance</returns>
        </member>
        <member name="M:ZarDevs.Http.Security.IAccessTokenUsernameRequestBuilder.SetCredendials(System.String,System.String)">
            <summary>
            Add the <see cref="P:ZarDevs.Http.Security.IAccessTokenUsernameRequestBuilder.Username"/> and <see cref="P:ZarDevs.Http.Security.IAccessTokenUsernameRequestBuilder.Password"/> for the request
            </summary>
            <param name="username">The username</param>
            <param name="password">The password</param>
            <returns>The current instance</returns>
        </member>
        <member name="T:ZarDevs.Http.Security.IRefreshTokenRequestBuilder">
            <summary>
            Refresh toke request builder.
            </summary>
        </member>
        <member name="P:ZarDevs.Http.Security.IRefreshTokenRequestBuilder.RefreshToken">
            <summary>
            The refesh token
            </summary>
        </member>
        <member name="M:ZarDevs.Http.Security.IRefreshTokenRequestBuilder.SetRefreshToken(System.String)">
            <summary>
            Set the <see cref="P:ZarDevs.Http.Security.IRefreshTokenRequestBuilder.RefreshToken"/>
            </summary>
            <param name="refreshToken">The refresh token to set.</param>
            <returns>The current instance.</returns>
        </member>
        <member name="T:ZarDevs.Http.Security.ITokenRequestBuilder">
            <summary>
            Token request builder
            </summary>
        </member>
        <member name="P:ZarDevs.Http.Security.ITokenRequestBuilder.ClientId">
            <summary>
            Get the ClientId
            </summary>
        </member>
        <member name="P:ZarDevs.Http.Security.ITokenRequestBuilder.ClientSecret">
            <summary>
            Get the ClientSecret
            </summary>
        </member>
        <member name="P:ZarDevs.Http.Security.ITokenRequestBuilder.GrantType">
            <summary>
            Get the Grant Type
            </summary>
        </member>
        <member name="M:ZarDevs.Http.Security.ITokenRequestBuilder.Build">
            <summary>
            Build the list of parameters
            </summary>
            <returns>A parameter map.</returns>
        </member>
        <member name="M:ZarDevs.Http.Security.ITokenRequestBuilder.SetClientId(System.String)">
            <summary>
            Add the <see cref="P:ZarDevs.Http.Security.ITokenRequestBuilder.ClientId"/>
            </summary>
            <param name="clientId">The client id</param>
            <returns>The current instance</returns>
        </member>
        <member name="M:ZarDevs.Http.Security.ITokenRequestBuilder.SetClientSecret(System.String)">
            <summary>
            Add the <see cref="P:ZarDevs.Http.Security.ITokenRequestBuilder.ClientSecret"/>
            </summary>
            <param name="clientSecret">The client secret</param>
            <returns>The current instance</returns>
        </member>
        <member name="T:ZarDevs.Http.Security.ITokenReader`1">
            <summary>
            Token reader that reads a string token and converts it to a <typeparamref name="TToken"/>.
            </summary>
            <typeparam name="TToken">The parsed token type <typeparamref name="TToken"/>.</typeparam>
        </member>
        <member name="M:ZarDevs.Http.Security.ITokenReader`1.ReadToken(System.String)">
            <summary>
            The the token from the specified string
            </summary>
            <param name="token">The token in string format</param>
            <returns>The converted token.</returns>
        </member>
        <member name="T:ZarDevs.Http.Security.TokenValidationExtentions">
            <summary>
            <see cref="T:Microsoft.IdentityModel.Tokens.SecurityToken"/> extention class.
            </summary>
        </member>
        <member name="M:ZarDevs.Http.Security.TokenValidationExtentions.HasExpired(Microsoft.IdentityModel.Tokens.SecurityToken)">
            <summary>
            Check if the <see cref="T:Microsoft.IdentityModel.Tokens.SecurityToken"/> has expired.
            </summary>
            <param name="token">The token to validate, can be null.</param>
            <returns>A true if the token has expired.</returns>
        </member>
    </members>
</doc>
